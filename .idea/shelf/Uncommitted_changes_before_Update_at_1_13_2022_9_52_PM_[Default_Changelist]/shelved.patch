Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/controlledPeriod/testingClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode.controlledPeriod;\r\n\r\nimport static org.firstinspires.ftc.teamcode.utilities.autonomousDriveUtilities.robotInfo.COUNTS_PER_CM;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\r\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\r\nimport com.qualcomm.robotcore.util.ElapsedTime;\r\n\r\nimport org.firstinspires.ftc.robotcore.internal.ftdi.eeprom.FT_EEPROM_232H;\r\nimport org.firstinspires.ftc.teamcode.robotComponents.driveComponents;\r\nimport org.firstinspires.ftc.teamcode.robotComponents.handlingComponents;\r\nimport org.firstinspires.ftc.teamcode.utilities.autonomousDriveUtilities.Gyro;\r\nimport org.firstinspires.ftc.teamcode.utilities.driveUtilities.encoderUsing;\r\nimport org.firstinspires.ftc.teamcode.utilities.driveUtilities.powerBehavior;\r\nimport org.firstinspires.ftc.teamcode.utilities.driveUtilities.robotDirection;\r\n\r\n/** TODO Test odometry\r\n * Testing class.\r\n **/\r\n\r\n@TeleOp(name = \"testing\" )\r\n\r\npublic class testingClass extends LinearOpMode {\r\n\r\n\r\n    driveComponents drive = new driveComponents();\r\n    @Override\r\n    public void runOpMode() throws InterruptedException {\r\n        drive.init(hardwareMap, telemetry,  robotDirection.ROBOT_DIRECTIONS.FORWARD, powerBehavior.ROBOT_BREAKING.BRAKE, encoderUsing.ENCODER_RUNNING_MODE.RUN_USING);\r\n\r\n\r\n        waitForStart();\r\n        if(opModeIsActive());\r\n        nebunie(0,-50,1,90);\r\n        sleep(2000);\r\n\r\n    }\r\n\r\n    /**original teleop function\r\n\r\n     double r = Math.hypot(gamepad1.left_stick_x, -gamepad1.left_stick_y);\r\n     double robotAngle = Math.atan2(gamepad1.left_stick_y, -gamepad1.left_stick_x) - Math.PI / 4;\r\n     double rightX = -gamepad1.right_stick_x;\r\n\r\n     final double v1 = r * Math.cos(robotAngle) + rightX;\r\n     final double v2 = r * Math.sin(robotAngle) - rightX;\r\n     final double v3 = r * Math.sin(robotAngle) + rightX;\r\n     final double v4 = r * Math.cos(robotAngle) - rightX;\r\n\r\n     frontLeft.setPower(v1);\r\n     frontRight.setPower(v2);\r\n     backLeft.setPower(v3);\r\n     backRight.setPower(v4);\r\n     */\r\n\r\n    /*//calcul care merge\r\n    Math.sin(angle + (Math.PI/4)) * speed\r\n     */\r\n\r\n\r\n    //aicea mere unghiul dar nu si curba\r\n    public void spline(double xDistance, double yDistance, double speed) throws InterruptedException{\r\n\r\n        xDistance *= 1.1;\r\n        yDistance *= 1.5;\r\n\r\n\r\n\r\n        double distance = Math.hypot(xDistance,yDistance) * COUNTS_PER_CM;\r\n\r\n        double angle = Math.atan2(xDistance,yDistance); // corect --> unghi in radiani\r\n\r\n        drive.setMotorsEnabled();\r\n        Thread.sleep(100);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.STOP_AND_RESET);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.RUN_USING);\r\n        Thread.sleep(100);\r\n        drive.encoders.setTargetPositionXmovement(-(int)distance);\r\n\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.TO_POSITION);\r\n\r\n\r\n        double v1 = (Math.sin(angle + (Math.PI/4)) * speed )* 386.3 * 20;\r\n        double v2 = (Math.sin(angle - (Math.PI/4)) * speed )* 386.3 * 20;\r\n        double v3 = (Math.sin(angle + (Math.PI/4)) * speed )* 386.3 * 20;\r\n        double v4 = (Math.sin(angle - (Math.PI/4)) * speed )* 386.3 * 20;\r\n\r\n        double correctionAngle;\r\n        do {\r\n\r\n\r\n            drive.leftFront.setVelocity(v1);\r\n            drive.rightFront.setVelocity(v2);\r\n            drive.leftRear.setVelocity(v3);\r\n            drive.rightRear.setVelocity(v4);\r\n\r\n\r\n            telemetry.addData(\"unghi\", angle);\r\n            telemetry.addData(\"distance\", distance / COUNTS_PER_CM);\r\n            telemetry.addData(\"v4\", v4);\r\n            telemetry.addData(\"v1\", v1);\r\n            telemetry.addData(\"v2\", v2);\r\n            telemetry.addData(\"v3\", v3);\r\n\r\n            telemetry.update();\r\n\r\n        } while(drive.leftFront.isBusy() && drive.rightRear.isBusy() && drive.rightFront.isBusy() && drive.leftRear.isBusy() && opModeIsActive());\r\n\r\n        drive.leftFront.setVelocity(0);\r\n        drive.rightRear.setVelocity(0);\r\n        drive.rightFront.setVelocity(0);\r\n        drive.leftRear.setVelocity(0);\r\n\r\n        drive.setMotorsDisabled();\r\n\r\n    }\r\n\r\n    //aicea mere curba\r\n    public void spline2(double xDistance, double yDistance, double speed, double r) throws InterruptedException{\r\n\r\n        xDistance *= 1.1;\r\n        yDistance *= 1.5;\r\n\r\n        double distance = Math.hypot(xDistance,yDistance) * COUNTS_PER_CM;\r\n\r\n        double angle = Math.atan2(xDistance,yDistance); // corect --> unghi in radiani\r\n\r\n        drive.setMotorsEnabled();\r\n        Thread.sleep(100);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.STOP_AND_RESET);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.RUN_USING);\r\n        Thread.sleep(100);\r\n        drive.encoders.setTargetPositionXmovement(-(int)distance);\r\n\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.TO_POSITION);\r\n\r\n        double power1 = drive.setMotorPower(Math.sin(angle + (Math.PI/4)) * speed);\r\n        double power2 = drive.setMotorPower(Math.sin(angle - (Math.PI/4)) * speed);\r\n\r\n        final double v1 = (speed* Math.cos(angle) + r) * 386.3 * 20;\r\n        final double v2 = (speed* Math.sin(angle) - r) * 386.3 * 20;\r\n        final double v3 = (speed* Math.sin(angle) + r) * 386.3 * 20;\r\n        final double v4 = (speed* Math.cos(angle) - r) * 386.3 * 20;\r\n\r\n        double correctionAngle;\r\n        do {\r\n            drive.leftFront.setVelocity(v1);\r\n            drive.rightFront.setVelocity(v2);\r\n            drive.leftRear.setVelocity(v3);\r\n            drive.rightRear.setVelocity(v4);\r\n\r\n\r\n            telemetry.addData(\"unghi\", angle);\r\n            telemetry.addData(\"distance\", distance / COUNTS_PER_CM);\r\n            telemetry.addData(\"power1\",power1);\r\n            telemetry.addData(\"power2\",power2);\r\n            telemetry.update();\r\n\r\n        } while(drive.leftFront.isBusy() && drive.rightRear.isBusy() && drive.rightFront.isBusy() && drive.leftRear.isBusy() && opModeIsActive());\r\n\r\n        drive.leftFront.setVelocity(0);\r\n        drive.rightRear.setVelocity(0);\r\n        drive.rightFront.setVelocity(0);\r\n        drive.leftRear.setVelocity(0);\r\n\r\n        drive.setMotorsDisabled();\r\n\r\n    }\r\n\r\n    //deducere\r\n    //TODO\r\n    public void nebunie(double xDistance, double yDistance, double speed, double t) throws InterruptedException{\r\n\r\n        xDistance *= 1.1;\r\n        yDistance *= 1.5;\r\n\r\n        //distanta de mers --> ipotenuza\r\n        double distance = Math.hypot(xDistance,yDistance) * COUNTS_PER_CM;\r\n\r\n        //double angle = Math.atan2(xDistance,yDistance); // corect --> unghi in radiani\r\n\r\n        drive.setMotorsEnabled();\r\n\r\n        double y = -yDistance;\r\n        double x = xDistance;\r\n        double rx = t;\r\n\r\n        double denominator = Math.max(Math.abs(y) + Math.abs(x) + Math.abs(rx), 1);\r\n\r\n        Thread.sleep(100);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.STOP_AND_RESET);\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.RUN_USING);\r\n        Thread.sleep(100);\r\n        drive.encoders.setTargetPositionXmovement(-(int)distance);\r\n\r\n        drive.encoders.setEncoderMode(encoderUsing.ENCODER_RUNNING_MODE.TO_POSITION);\r\n\r\n        do {\r\n            double v1 =( y + x + rx)/denominator;\r\n            double v2 = (y - x + rx)/denominator;\r\n            double v3 = (y - x - rx)/denominator;\r\n            double v4 =(y + x - rx)/denominator;\r\n\r\n            drive.leftFront.setPower(v1);\r\n            drive.leftRear.setPower(v2);\r\n            drive.rightFront.setPower(v3) ;\r\n            drive.rightRear.setPower(v4);\r\n\r\n\r\n\r\n        } while(drive.leftFront.isBusy() && drive.rightRear.isBusy() && drive.rightFront.isBusy() && drive.leftRear.isBusy() && opModeIsActive());\r\n\r\n        drive.leftFront.setVelocity(0);\r\n        drive.rightRear.setVelocity(0);\r\n        drive.rightFront.setVelocity(0);\r\n        drive.leftRear.setVelocity(0);\r\n\r\n        drive.setMotorsDisabled();\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/controlledPeriod/testingClass.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/controlledPeriod/testingClass.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/controlledPeriod/testingClass.java	(revision ed118f42bd1dd3d68317cc25142bdea47e1c09c0)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/controlledPeriod/testingClass.java	(date 1642083837159)
@@ -31,7 +31,7 @@
 
         waitForStart();
         if(opModeIsActive());
-        nebunie(0,-50,1,90);
+        nebunie(0,-62,1,180);
         sleep(2000);
 
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"Android API 31 Platform\" project-jdk-type=\"Android SDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision ed118f42bd1dd3d68317cc25142bdea47e1c09c0)
+++ b/.idea/misc.xml	(date 1642083282615)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="Android API 31 Platform" project-jdk-type="Android SDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
